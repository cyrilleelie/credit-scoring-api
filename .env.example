# ----------------------------------------------------
# FICHIER D'EXEMPLE POUR LA CONFIGURATION DE L'ENVIRONNEMENT
# ----------------------------------------------------
# Copiez ce fichier en .env et remplacez les valeurs ci-dessous.
# Le fichier .env ne doit JAMAIS être versionné sur Git.

# --- Configuration de la Base de Données PostgreSQL ---
# Utilisée par SQLAlchemy pour se connecter à la base de données.
DB_USER=votre_utilisateur_db
DB_PASSWORD=votre_mot_de_passe_db
DB_HOST=localhost
DB_PORT=5432
DB_NAME=credit_scoring

# --- Configuration de l'API ---
# URL complète où l'API FastAPI est accessible.
# Utilisée par le dashboard Streamlit et les scripts de test.
API_URL="http://127.0.0.1:8000"

# --- Configuration de l'Authentification (JWT) ---
# Clé secrète pour signer les tokens.
# Pour la générer, vous pouvez utiliser : openssl rand -hex 32
SECRET_KEY=votre_cle_secrete_de_32_caracteres_hex
ALGORITHM=HS256
ACCESS_TOKEN_EXPIRE_MINUTES=30

# --- Identifiants de l'Utilisateur de Test ---
# Utilisés pour se connecter depuis le dashboard, les tests et les scripts.
# Le script init_db.py créera cet utilisateur dans la base de données.
API_USER=user_test
API_PASSWORD=pass123

# --- Configuration du Modèle de Scoring ---
# Chemin vers l'artefact du modèle entraîné.
MODEL_PATH="model_artifacts/credit_scoring_model.joblib"

# Seuil de décision pour la classification (ex: 0.48).
DECISION_THRESHOLD=0.48

# --- Chemins vers les Fichiers de Données (pour init_db.py) ---
# Utilisés par le script d'initialisation pour charger les données locales.
TRAIN_DATA_FILE="data/application_train_rdy.csv"
TEST_DATA_FILE="data/application_test_rdy.csv"
